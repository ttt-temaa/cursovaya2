from unittest.mock import Mock, patch

import pandas as pd
from pandas import DataFrame

from src.reports import spending_in_category


@patch("pandas.read_excel")
def test_spending_by_category(mock_reader: Mock) -> None:
    mock_reader.return_value = DataFrame(
        [
            {
                "Дата операции": "28.01.2018 17:23:36",
                "Дата платежа": "30.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -345.24,
                "Валюта операции": "RUB",
                "Сумма платежа": -345.24,
                "Валюта платежа": "RUB",
                "Кэшбэк": "",
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": "Перекрёсток",
                "Бонусы (включая кэшбэк)": 6,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 345.24,
            },
            {
                "Дата операции": "28.01.2018 11:15:00",
                "Дата платежа": "30.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -45.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -45.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": "",
                "Категория": "Ж/д билеты",
                "MCC": 4111.0,
                "Описание": "Метро Санкт-Петербург",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 45.0,
            },
        ]
    )
    df = pd.DataFrame(
        list([{"Дата платежа": "30.01.2018", "Категория": "Супермаркеты", "Сумма платежа": -345.24}]),
        columns=["Дата платежа", "Категория", "Сумма платежа"],
    )
    df_2 = spending_in_category(
        [
            {
                "Дата операции": "28.01.2018 17:23:36",
                "Дата платежа": "30.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -345.24,
                "Валюта операции": "RUB",
                "Сумма платежа": -345.24,
                "Валюта платежа": "RUB",
                "Кэшбэк": "",
                "Категория": "Супермаркеты",
                "MCC": 5411.0,
                "Описание": "Перекрёсток",
                "Бонусы (включая кэшбэк)": 6,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 345.24,
            },
            {
                "Дата операции": "28.01.2018 11:15:00",
                "Дата платежа": "30.01.2018",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -45.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -45.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": "",
                "Категория": "Ж/д билеты",
                "MCC": 4111.0,
                "Описание": "Метро Санкт-Петербург",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 45.0,
            },
        ],
        "Супермаркеты",
        "30.01.2018",
    )
    assert (pd.read_excel(df)).to_dict == (pd.read_excel(df_2)).to_dict
