import json
from unittest.mock import Mock, patch

import pytest
from pandas import DataFrame

from src.services import simple_search


@pytest.fixture
def transactions() -> list[dict]:
    return [
        {
            "Дата операции": "12.03.2019 17:27:35",
            "Дата платежа": "15.03.2019",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -127.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -127.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": "",
            "Категория": "Транспорт",
            "MCC": 4121.0,
            "Описание": "Яндекс Такси",
            "Бонусы (включая кэшбэк)": 2,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 127.0,
        },
        {
            "Дата операции": "12.03.2019 16:51:05",
            "Дата платежа": "13.03.2019",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -55.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -55.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": "",
            "Категория": "Образование",
            "MCC": 8220.0,
            "Описание": "СПбПУ",
            "Бонусы (включая кэшбэк)": 1,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 55.0,
        },
    ]


@patch("pandas.read_excel")
def test_simple_search(mock_reader: Mock, transactions: list[dict]) -> None:
    mock_reader.return_value = DataFrame(transactions)
    assert simple_search("Образование") == json.dumps(
        [
            {
                "Дата операции": "12.03.2019 16:51:05",
                "Дата платежа": "13.03.2019",
                "Номер карты": "*7197",
                "Статус": "OK",
                "Сумма операции": -55.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -55.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": "",
                "Категория": "Образование",
                "MCC": 8220.0,
                "Описание": "СПбПУ",
                "Бонусы (включая кэшбэк)": 1,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 55.0,
            }
        ],
        ensure_ascii=False,
        indent=4,
    )
